DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS mpa
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(32) NOT NULL
);

CREATE TABLE IF NOT EXISTS film
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(128) NOT NULL,
    mpa             INTEGER NOT NULL REFERENCES mpa(id),
    description     VARCHAR(256) NOT NULL,
    release_date    DATE NOT NULL,
    duration        INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email           VARCHAR(128) NOT NULL,
    login           VARCHAR(128) NOT NULL,
    name            VARCHAR(128) NOT NULL,
    birthday	    DATE
);

CREATE TABLE IF NOT EXISTS feed
(
    eventId INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    userId INTEGER,
    eventType VARCHAR(128) NOT NULL,
    operation VARCHAR(128) NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    entityId INTEGER
);

CREATE TABLE IF NOT EXISTS genre
(
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name            VARCHAR(128) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id         INTEGER NOT NULL REFERENCES film(id) ON DELETE CASCADE,
    genre_id        INTEGER NOT NULL REFERENCES genre(id)
);



CREATE TABLE IF NOT EXISTS likes
(
    film_id         INTEGER NOT NULL REFERENCES film(id) ON DELETE CASCADE,
    user_id         INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friendship
(
    user_id             INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    friend_id           INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    is_confirmed        BOOLEAN
);

CREATE TABLE IF NOT EXISTS review
(
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    film_id INT NOT NULL,
    text_review VARCHAR(1500),
    is_positive BOOLEAN NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES film(id) ON DELETE CASCADE
);

create TABLE IF NOT EXISTS review_reactions (
    user_id INT NOT NULL,
    review_id INT NOT NULL,
    is_positive BOOLEAN NOT NULL,
    PRIMARY KEY (user_id, review_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (review_id) REFERENCES review(id) ON DELETE CASCADE
);